---
- name: Add PPA for Nginx.
  apt_repository:
    repo: 'ppa:nginx/{{ nginx_ppa_version }}'
    state: present
    update_cache: yes
  register: nginx_ppa_added
  when: nginx_ppa_use

- name: Ensure nginx will reinstall if the PPA was just added.
  apt:
    name: nginx
    state: absent
  when: nginx_ppa_added.changed

- name: Prepare to install PHP 7.1
  apt:
    name: software-properties-common
    state: present

- name: Add PHP7.1 PPA repositories
  apt_repository:
    repo: ppa:ondrej/php

- name: Run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: yes

- name: Install PHP 7.1 packages
  apt:
    name: "{{ item }}"
    state: installed
  with_items:
    - php7.1-fpm
    - php7.1-common
    - php7.1-mbstring
    - php7.1-xmlrpc
    - php7.1-soap
    - php7.1-gd
    - php7.1-xml
    - php7.1-intl
    - php7.1-mysql
    - php7.1-cli
    - php7.1-mcrypt
    - php7.1-zip
    - php7.1-curl

- name: Install nginx from PPA
  apt:
    name: nginx
    state: present

- name: Ensure nginx is started and enabled to start at boot.
  systemd:
    name: nginx
    state: started
    enabled: yes

- name: Download and unarchive wordpress source
  unarchive:
    src: https://wordpress.org/latest.tar.gz
    dest: "{{ web_root }}" 
    remote_src: yes

- name: Set the right permissions on wordpress directory
  file:
    path: "{{ web_root }}/{{ wordpress_directory }}"
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}" 
    recurse: yes
    mode: 0755

- name: Create the wordpress NGINX configuration (from jinja template)
  template:
    src: wordpress.j2
    dest:  /etc/nginx/sites-available/wordpress
    owner: root
    group: root
    mode: '0600'
    backup: yes

- name: Enable the wordpress site (by symplink to sites-enabled)
  file:
    src: /etc/nginx/sites-available/wordpress
    dest: /etc/nginx/sites-enabled/wordpress
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    state: link

- name: Create the wordpress site configuration (from jinja template)
  template:
    src: wp-config-sample.php.j2 
    dest: "{{ web_root }}/{{ wordpress_directory }}/wp-config.php"
    owner: "{{ webserver_user }}"
    group: "{{ webserver_group }}"
    mode: '0600'
    backup: yes

- name: Get the latest DB backup of the wordpress site (IF enabled)
  copy:
    src: "{{ wordpress_db_restore_archive }}" 
    dest: /tmp
  when: restore_from_backup == True

- name: Unarchive the wordpress backup archive "{{ wordpress_db_restore_archive }}"
  unarchive:
    src: "/tmp/{{ wordpress_db_restore_archive }}"
    dest: /tmp/
    remote_src: yes
  when: restore_from_backup == True

- name: Restore from the latest DB backup of the wordpress site (IF enabled)
  shell: mysql -u "{{ wordpress_db_root_username }}" "{{ wordpress_db }}" < "/tmp/{{ wordpress_db_restore_file }}"
  environment:
    MYSQL_PWD: "{{ wordpress_db_root_password }}"
  when: restore_from_backup == True

- name: Restart nginx to apply the new wordpress configuration
  systemd:
    name: nginx
    state: restarted
    enabled: yes

